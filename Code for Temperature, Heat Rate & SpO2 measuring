#include <ESP8266WiFi.h>
#include "ThingSpeak.h"
#include "Wire.h"
#include <Wire.h>
#include "MAX30100_PulseOximeter.h"
#define REPORTING_PERIOD_MS 200
int outputpin= A0;
PulseOximeter pox;
float BPM, SpO2;
uint32_t tsLastReport = 0;
void onBeatDetected()
{
    Serial.println("Beat Detected!");
}
const char *ssid = "Enter router SSID here"; 
const char *password = "Enter WiFi password here";
unsigned long chanelId = Enter ThingSpeak channel ID here;
const char *writeAPIkey = "Enter ThingSpeak channel Write API key here";
WiFiClient client;
void setup() {
Serial.begin(9600); 
Serial.print("Initializing Pulse Oximeter..");
    if (!pox.begin())
    {
         Serial.println("FAILED");
    }
    else
    {
         Serial.println("SUCCESS");
         pox.setOnBeatDetectedCallback(onBeatDetected);
    }
         pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);   
WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password); 
  Serial.println("Connecting to Wifi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    delay(500);
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  ThingSpeak.begin(client);
}
void loop()       
{
int analogValue = analogRead(outputpin);
float millivolts = (analogValue/1024.0) * 3300; 
float celsius = millivolts/10;
pox.update();
    BPM = pox.getHeartRate();
    SpO2 = pox.getSpO2();
    if (millis() - tsLastReport > REPORTING_PERIOD_MS)
    {  
       ThingSpeak.setField(3,BPM);
       ThingSpeak.setField(4,SpO2);
int respons = ThingSpeak.writeFields(chanelId,writeAPIkey); 
       ThingSpeak.setField(1,celsius);       
Serial.print("  Temperature =  ");
Serial.println(celsius);
delay(1000);
        Serial.print("Heart rate:");
        Serial.print(BPM);
        Serial.print(" BPM");
        Serial.print("   SpO2:");
        Serial.print(SpO2);
        Serial.println(" %");
        tsLastReport = millis();
}
}
